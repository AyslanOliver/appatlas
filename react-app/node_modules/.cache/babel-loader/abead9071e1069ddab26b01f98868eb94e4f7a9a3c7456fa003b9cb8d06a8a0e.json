{"ast":null,"code":"import axios from'axios';// Configuração da API - função que retorna a URL baseada no ambiente atual\nfunction getApiUrl(){console.log('=== DEBUG getApiUrl ===');// Se estiver rodando no Cordova (protocolo file:), usar a API do InfinityFree\nif(typeof window!=='undefined'&&window.location.protocol==='file:'){console.log('Ambiente detectado: Cordova');return'https://rotaexpress.free.nf';// URL do seu domínio\n}// Detectar o ambiente baseado no hostname\nif(typeof window!=='undefined'){const hostname=window.location.hostname;const protocol=window.location.protocol;const port=window.location.port;console.log('Hostname:',hostname);console.log('Protocol:',protocol);console.log('Port:',port);// Para desenvolvimento local, usar servidor local\nconst isLocal=hostname==='localhost'||hostname==='127.0.0.1';if(isLocal){console.log('Ambiente detectado: Local');const apiUrl='http://localhost:3001';console.log('URL da API retornada:',apiUrl);return apiUrl;}// Se estiver no InfinityFree, usar a API local\nif(hostname.includes('infinityfreeapp.com')||hostname.includes('epizy.com')||hostname==='rotaexpress.free.nf'||hostname.includes('free.nf')){console.log('Ambiente detectado: InfinityFree');console.log('URL da API retornada:',window.location.origin);return window.location.origin;}}// Fallback para InfinityFree\nconsole.log('Ambiente detectado: Fallback');return'https://rotaexpress.free.nf';// URL do seu domínio\n}// Configuração do axios\nconst API_URL=getApiUrl();const api=axios.create({baseURL:API_URL,timeout:15000,// Aumentado para InfinityFree\nheaders:{'Content-Type':'application/json'}});// Debug: Log da configuração da API\nconsole.log('API_URL configurado:',API_URL);if(typeof window!=='undefined'){console.log('Protocolo atual:',window.location.protocol);console.log('Hostname atual:',window.location.hostname);console.log('Ambiente detectado:',window.location.protocol==='file:'?'Cordova':window.location.hostname.includes('infinityfreeapp.com')||window.location.hostname.includes('epizy.com')||window.location.hostname==='rotaexpress.free.nf'?'InfinityFree':window.location.hostname==='localhost'||window.location.hostname==='127.0.0.1'?'Local':'Outro');}console.log('Build timestamp:',new Date().toISOString());// Função para testar a conexão com a API\nexport const testarConexao=async()=>{try{const response=await api.get('/api/test');return response.data;}catch(error){console.error('Erro ao testar conexão:',error);throw error;}};// Funções para gerenciamento de produtos\nexport const getProdutos=async()=>{try{const response=await api.get('/api/produtos');return response.data;}catch(error){console.error('Erro ao buscar produtos:',error);throw error;}};export const criarProduto=async dados=>{try{const response=await api.post('/api/produtos',dados);return response.data;}catch(error){console.error('Erro ao criar produto:',error);throw error;}};export const atualizarProduto=async(id,dados)=>{try{const response=await api.put(\"/api/produtos/\".concat(id),dados);return response.data;}catch(error){console.error('Erro ao atualizar produto:',error);throw error;}};export const deletarProduto=async id=>{try{const response=await api.delete(\"/api/produtos/\".concat(id));return response.data;}catch(error){console.error('Erro ao deletar produto:',error);throw error;}};// Funções para gerenciamento de pedidos\nexport const getPedidos=async()=>{try{const response=await api.get('/api/pedidos');return response.data;}catch(error){console.error('Erro ao buscar pedidos:',error);throw error;}};export const getPedidoById=async id=>{try{const response=await api.get(\"/api/pedidos/\".concat(id));return response.data;}catch(error){console.error('Erro ao buscar pedido:',error);throw error;}};export const criarPedido=async pedido=>{try{const response=await api.post('/api/pedidos',pedido);return response.data;}catch(error){console.error('Erro ao criar pedido:',error);throw error;}};export const atualizarPedido=async(id,dados)=>{try{const response=await api.put(\"/api/pedidos/\".concat(id),dados);return response.data;}catch(error){console.error('Erro ao atualizar pedido:',error);throw error;}};export const deletarPedido=async id=>{try{const response=await api.delete(\"/api/pedidos/\".concat(id));return response.data;}catch(error){console.error('Erro ao deletar pedido:',error);throw error;}};export const deletarTodosPedidos=async()=>{try{const response=await api.delete('/api/pedidos?deleteAll=true');return response.data;}catch(error){console.error('Erro ao deletar todos os pedidos:',error);throw error;}};export const getCardapio=async function(){let tipo=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{const url=tipo?\"/api/cardapio?tipo=\".concat(tipo):'/api/cardapio';const response=await api.get(url);return response.data;}catch(error){console.error('Erro ao buscar cardápio:',error);throw error;}};export default api;","map":{"version":3,"names":["axios","getApiUrl","console","log","window","location","protocol","hostname","port","isLocal","apiUrl","includes","origin","API_URL","api","create","baseURL","timeout","headers","Date","toISOString","testarConexao","response","get","data","error","getProdutos","criarProduto","dados","post","atualizarProduto","id","put","concat","deletarProduto","delete","getPedidos","getPedidoById","criarPedido","pedido","atualizarPedido","deletarPedido","deletarTodosPedidos","getCardapio","tipo","arguments","length","undefined","url"],"sources":["E:/appatlas/react-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Configuração da API - função que retorna a URL baseada no ambiente atual\nfunction getApiUrl() {\n    console.log('=== DEBUG getApiUrl ===');\n    \n    // Se estiver rodando no Cordova (protocolo file:), usar a API do InfinityFree\n    if (typeof window !== 'undefined' && window.location.protocol === 'file:') {\n        console.log('Ambiente detectado: Cordova');\n        return 'https://rotaexpress.free.nf'; // URL do seu domínio\n    }\n    \n    // Detectar o ambiente baseado no hostname\n    if (typeof window !== 'undefined') {\n        const hostname = window.location.hostname;\n        const protocol = window.location.protocol;\n        const port = window.location.port;\n        \n        console.log('Hostname:', hostname);\n        console.log('Protocol:', protocol);\n        console.log('Port:', port);\n        \n        // Para desenvolvimento local, usar servidor local\n        const isLocal = hostname === 'localhost' || hostname === '127.0.0.1';\n        if (isLocal) {\n            console.log('Ambiente detectado: Local');\n            const apiUrl = 'http://localhost:3001';\n            console.log('URL da API retornada:', apiUrl);\n            return apiUrl;\n        }\n        \n        // Se estiver no InfinityFree, usar a API local\n        if (hostname.includes('infinityfreeapp.com') || hostname.includes('epizy.com') || hostname === 'rotaexpress.free.nf' || hostname.includes('free.nf')) {\n            console.log('Ambiente detectado: InfinityFree');\n            console.log('URL da API retornada:', window.location.origin);\n            return window.location.origin;\n        }\n    }\n    \n    // Fallback para InfinityFree\n    console.log('Ambiente detectado: Fallback');\n    return 'https://rotaexpress.free.nf'; // URL do seu domínio\n}\n\n// Configuração do axios\nconst API_URL = getApiUrl();\nconst api = axios.create({\n    baseURL: API_URL,\n    timeout: 15000, // Aumentado para InfinityFree\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// Debug: Log da configuração da API\nconsole.log('API_URL configurado:', API_URL);\nif (typeof window !== 'undefined') {\n    console.log('Protocolo atual:', window.location.protocol);\n    console.log('Hostname atual:', window.location.hostname);\n    console.log('Ambiente detectado:', \n        window.location.protocol === 'file:' ? 'Cordova' : \n        window.location.hostname.includes('infinityfreeapp.com') || window.location.hostname.includes('epizy.com') || window.location.hostname === 'rotaexpress.free.nf' ? 'InfinityFree' : \n        window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' ? 'Local' : 'Outro'\n    );\n}\nconsole.log('Build timestamp:', new Date().toISOString());\n\n// Função para testar a conexão com a API\nexport const testarConexao = async () => {\n    try {\n        const response = await api.get('/api/test');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao testar conexão:', error);\n        throw error;\n    }\n};\n\n// Funções para gerenciamento de produtos\nexport const getProdutos = async () => {\n    try {\n        const response = await api.get('/api/produtos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar produtos:', error);\n        throw error;\n    }\n};\n\nexport const criarProduto = async (dados) => {\n    try {\n        const response = await api.post('/api/produtos', dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar produto:', error);\n        throw error;\n    }\n};\n\nexport const atualizarProduto = async (id, dados) => {\n    try {\n        const response = await api.put(`/api/produtos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar produto:', error);\n        throw error;\n    }\n};\n\nexport const deletarProduto = async (id) => {\n    try {\n        const response = await api.delete(`/api/produtos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar produto:', error);\n        throw error;\n    }\n};\n\n// Funções para gerenciamento de pedidos\nexport const getPedidos = async () => {\n    try {\n        const response = await api.get('/api/pedidos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getPedidoById = async (id) => {\n    try {\n        const response = await api.get(`/api/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedido:', error);\n        throw error;\n    }\n};\n\nexport const criarPedido = async (pedido) => {\n    try {\n        const response = await api.post('/api/pedidos', pedido);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar pedido:', error);\n        throw error;\n    }\n};\n\nexport const atualizarPedido = async (id, dados) => {\n    try {\n        const response = await api.put(`/api/pedidos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarPedido = async (id) => {\n    try {\n        const response = await api.delete(`/api/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarTodosPedidos = async () => {\n    try {\n        const response = await api.delete('/api/pedidos?deleteAll=true');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar todos os pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getCardapio = async (tipo = '') => {\n    try {\n        const url = tipo ? `/api/cardapio?tipo=${tipo}` : '/api/cardapio';\n        const response = await api.get(url);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar cardápio:', error);\n        throw error;\n    }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}