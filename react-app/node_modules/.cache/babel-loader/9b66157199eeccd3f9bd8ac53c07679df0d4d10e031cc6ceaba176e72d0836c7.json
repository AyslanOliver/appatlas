{"ast":null,"code":"import axios from 'axios';\n\n// Configuração da API\nfunction getApiUrl() {\n  // Se estiver rodando no Cordova (protocolo file:), usar sempre a API do Vercel\n  if (window.location.protocol === 'file:') {\n    return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app';\n  }\n  const hostname = window.location.hostname;\n  const isLocal = hostname === 'localhost' || hostname === '127.0.0.1';\n  if (isLocal) {\n    // Em desenvolvimento local, usar a API do Vercel temporariamente\n    return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app';\n  } else {\n    // Em produção, usar a API do Vercel\n    return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app';\n  }\n}\nconst API_URL = getApiUrl();\n\n// Configuração do axios\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Debug: Log da configuração da API\nconsole.log('API_URL configurado:', API_URL);\nconsole.log('Protocolo atual:', window.location.protocol);\nconsole.log('Hostname atual:', window.location.hostname);\nconsole.log('Ambiente detectado:', window.location.protocol === 'file:' ? 'Cordova' : 'Web');\n\n// Função para testar a conexão com a API\nexport const testarConexao = async () => {\n  try {\n    await api.get('/api/produtos');\n    console.log('Conexão com a API estabelecida com sucesso!');\n    return true;\n  } catch (error) {\n    console.error('Erro de conexão:', error);\n    throw new Error('Erro ao conectar com o servidor. Verifique se a API está rodando.');\n  }\n};\n\n// Funções para gerenciamento de produtos\nexport const getProdutos = async () => {\n  try {\n    const response = await api.get('/api/produtos');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar produtos:', error);\n    throw error;\n  }\n};\nexport const criarProduto = async dados => {\n  try {\n    const response = await api.post('/api/produtos', dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao criar produto:', error);\n    throw error;\n  }\n};\nexport const atualizarProduto = async (id, dados) => {\n  try {\n    const response = await api.put(`/api/produtos/${id}`, dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao atualizar produto:', error);\n    throw error;\n  }\n};\nexport const deletarProduto = async id => {\n  try {\n    const response = await api.delete(`/api/produtos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar produto:', error);\n    throw error;\n  }\n};\n\n// Funções para gerenciamento de pedidos\nexport const getPedidos = async () => {\n  try {\n    const response = await api.get('/api/pedidos');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar pedidos:', error);\n    throw error;\n  }\n};\nexport const getPedidoById = async id => {\n  try {\n    const response = await api.get(`/api/pedidos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar pedido:', error);\n    throw error;\n  }\n};\nexport const criarPedido = async pedido => {\n  try {\n    const response = await api.post('/api/pedidos', pedido);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao criar pedido:', error);\n    throw error;\n  }\n};\nexport const atualizarPedido = async (id, dados) => {\n  try {\n    const response = await api.put(`/api/pedidos/${id}`, dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao atualizar pedido:', error);\n    throw error;\n  }\n};\nexport const deletarPedido = async id => {\n  try {\n    const response = await api.delete(`/api/pedidos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar pedido:', error);\n    throw error;\n  }\n};\nexport const deletarTodosPedidos = async () => {\n  try {\n    const response = await api.delete('/api/pedidos?deleteAll=true');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar todos os pedidos:', error);\n    throw error;\n  }\n};\nexport const getCardapio = async (tipo = '') => {\n  try {\n    const url = tipo ? `/api/cardapio?tipo=${tipo}` : '/api/cardapio';\n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar cardápio:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","getApiUrl","window","location","protocol","hostname","isLocal","API_URL","api","create","baseURL","timeout","headers","console","log","testarConexao","get","error","Error","getProdutos","response","data","criarProduto","dados","post","atualizarProduto","id","put","deletarProduto","delete","getPedidos","getPedidoById","criarPedido","pedido","atualizarPedido","deletarPedido","deletarTodosPedidos","getCardapio","tipo","url"],"sources":["E:/appatlas/react-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Configuração da API\nfunction getApiUrl() {\n    // Se estiver rodando no Cordova (protocolo file:), usar sempre a API do Vercel\n    if (window.location.protocol === 'file:') {\n        return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app';\n    }\n    \n    const hostname = window.location.hostname;\n    const isLocal = hostname === 'localhost' || hostname === '127.0.0.1';\n    \n    if (isLocal) {\n        // Em desenvolvimento local, usar a API do Vercel temporariamente\n        return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app';\n    } else {\n        // Em produção, usar a API do Vercel\n        return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app';\n    }\n}\n\nconst API_URL = getApiUrl();\n\n// Configuração do axios\nconst api = axios.create({\n    baseURL: API_URL,\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// Debug: Log da configuração da API\nconsole.log('API_URL configurado:', API_URL);\nconsole.log('Protocolo atual:', window.location.protocol);\nconsole.log('Hostname atual:', window.location.hostname);\nconsole.log('Ambiente detectado:', window.location.protocol === 'file:' ? 'Cordova' : 'Web');\n\n// Função para testar a conexão com a API\nexport const testarConexao = async () => {\n    try {\n        await api.get('/api/produtos');\n        console.log('Conexão com a API estabelecida com sucesso!');\n        return true;\n    } catch (error) {\n        console.error('Erro de conexão:', error);\n        throw new Error('Erro ao conectar com o servidor. Verifique se a API está rodando.');\n    }\n};\n\n// Funções para gerenciamento de produtos\nexport const getProdutos = async () => {\n    try {\n        const response = await api.get('/api/produtos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar produtos:', error);\n        throw error;\n    }\n};\n\nexport const criarProduto = async (dados) => {\n    try {\n        const response = await api.post('/api/produtos', dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar produto:', error);\n        throw error;\n    }\n};\n\nexport const atualizarProduto = async (id, dados) => {\n    try {\n        const response = await api.put(`/api/produtos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar produto:', error);\n        throw error;\n    }\n};\n\nexport const deletarProduto = async (id) => {\n    try {\n        const response = await api.delete(`/api/produtos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar produto:', error);\n        throw error;\n    }\n};\n\n// Funções para gerenciamento de pedidos\nexport const getPedidos = async () => {\n    try {\n        const response = await api.get('/api/pedidos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getPedidoById = async (id) => {\n    try {\n        const response = await api.get(`/api/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedido:', error);\n        throw error;\n    }\n};\n\nexport const criarPedido = async (pedido) => {\n    try {\n        const response = await api.post('/api/pedidos', pedido);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar pedido:', error);\n        throw error;\n    }\n};\n\nexport const atualizarPedido = async (id, dados) => {\n    try {\n        const response = await api.put(`/api/pedidos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarPedido = async (id) => {\n    try {\n        const response = await api.delete(`/api/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarTodosPedidos = async () => {\n    try {\n        const response = await api.delete('/api/pedidos?deleteAll=true');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar todos os pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getCardapio = async (tipo = '') => {\n    try {\n        const url = tipo ? `/api/cardapio?tipo=${tipo}` : '/api/cardapio';\n        const response = await api.get(url);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar cardápio:', error);\n        throw error;\n    }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}