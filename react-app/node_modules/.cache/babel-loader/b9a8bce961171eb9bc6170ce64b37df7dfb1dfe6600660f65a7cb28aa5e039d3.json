{"ast":null,"code":"// Serviço de Impressão Bluetooth para Cordova\nclass BluetoothPrinterService {\n  constructor() {\n    this.isConnected = false;\n    this.connectedDevice = null;\n    this.bluetoothSerial = null;\n    this.isCordova = false;\n\n    // Verificar se está rodando no Cordova\n    this.isCordova = !!(window.cordova || window.PhoneGap || window.phonegap);\n    if (this.isCordova) {\n      // Inicializar quando o dispositivo estiver pronto\n      document.addEventListener('deviceready', () => {\n        this.bluetoothSerial = window.bluetoothSerial;\n        console.log('Bluetooth Serial inicializado');\n      });\n    } else {\n      console.log('Executando no navegador - funcionalidades Bluetooth simuladas');\n    }\n  }\n\n  // Verificar se Bluetooth está disponível\n  isBluetoothAvailable() {\n    return new Promise((resolve, reject) => {\n      if (!this.isCordova) {\n        // Simular disponibilidade no navegador\n        resolve(true);\n        return;\n      }\n      if (!this.bluetoothSerial) {\n        reject(new Error('Plugin Bluetooth não disponível'));\n        return;\n      }\n      this.bluetoothSerial.isEnabled(() => resolve(true), () => reject(new Error('Bluetooth não está habilitado')));\n    });\n  }\n\n  // Habilitar Bluetooth\n  enableBluetooth() {\n    return new Promise((resolve, reject) => {\n      if (!this.isCordova) {\n        // Simular habilitação no navegador\n        resolve(true);\n        return;\n      }\n      if (!this.bluetoothSerial) {\n        reject(new Error('Plugin Bluetooth não disponível'));\n        return;\n      }\n      this.bluetoothSerial.enable(() => resolve(true), error => reject(new Error('Erro ao habilitar Bluetooth: ' + error)));\n    });\n  }\n\n  // Listar dispositivos pareados\n  listPairedDevices() {\n    return new Promise((resolve, reject) => {\n      if (!this.isCordova) {\n        // Simular dispositivos no navegador\n        const mockDevices = [{\n          id: 'mock-printer-1',\n          name: 'Impressora Térmica 1',\n          address: '00:11:22:33:44:55'\n        }, {\n          id: 'mock-printer-2',\n          name: 'Impressora Térmica 2',\n          address: '00:11:22:33:44:66'\n        }];\n        resolve(mockDevices);\n        return;\n      }\n      if (!this.bluetoothSerial) {\n        reject(new Error('Plugin Bluetooth não disponível'));\n        return;\n      }\n      this.bluetoothSerial.list(devices => {\n        console.log('Dispositivos pareados:', devices);\n        resolve(devices);\n      }, error => reject(new Error('Erro ao listar dispositivos: ' + error)));\n    });\n  }\n\n  // Conectar a um dispositivo\n  connect(deviceId) {\n    return new Promise((resolve, reject) => {\n      if (!this.isCordova) {\n        // Simular conexão no navegador\n        this.isConnected = true;\n        this.connectedDevice = deviceId;\n        resolve(true);\n        return;\n      }\n      if (!this.bluetoothSerial) {\n        reject(new Error('Plugin Bluetooth não disponível'));\n        return;\n      }\n      this.bluetoothSerial.connect(deviceId, () => {\n        this.isConnected = true;\n        this.connectedDevice = deviceId;\n        console.log('Conectado ao dispositivo:', deviceId);\n        resolve(true);\n      }, error => {\n        this.isConnected = false;\n        this.connectedDevice = null;\n        reject(new Error('Erro ao conectar: ' + error));\n      });\n    });\n  }\n\n  // Desconectar\n  disconnect() {\n    return new Promise((resolve, reject) => {\n      if (!this.isCordova) {\n        // Simular desconexão no navegador\n        this.isConnected = false;\n        this.connectedDevice = null;\n        resolve(true);\n        return;\n      }\n      if (!this.bluetoothSerial) {\n        reject(new Error('Plugin Bluetooth não disponível'));\n        return;\n      }\n      this.bluetoothSerial.disconnect(() => {\n        this.isConnected = false;\n        this.connectedDevice = null;\n        console.log('Desconectado');\n        resolve(true);\n      }, error => reject(new Error('Erro ao desconectar: ' + error)));\n    });\n  }\n\n  // Enviar dados para impressora\n  print(data) {\n    return new Promise((resolve, reject) => {\n      if (!this.isConnected) {\n        reject(new Error('Não conectado a nenhuma impressora'));\n        return;\n      }\n      if (!this.isCordova) {\n        // Simular impressão no navegador\n        console.log('Simulando impressão:', data);\n        resolve(true);\n        return;\n      }\n      if (!this.bluetoothSerial) {\n        reject(new Error('Plugin Bluetooth não disponível'));\n        return;\n      }\n      this.bluetoothSerial.write(data, () => {\n        console.log('Dados enviados para impressora');\n        resolve(true);\n      }, error => reject(new Error('Erro ao imprimir: ' + error)));\n    });\n  }\n\n  // Comandos ESC/POS para impressoras térmicas\n  getESCPOSCommands() {\n    return {\n      // Comandos básicos\n      INIT: '\\x1B\\x40',\n      // Inicializar impressora\n      LF: '\\x0A',\n      // Line Feed\n      CR: '\\x0D',\n      // Carriage Return\n      CUT: '\\x1D\\x56\\x00',\n      // Cortar papel\n\n      // Formatação de texto\n      BOLD_ON: '\\x1B\\x45\\x01',\n      // Negrito ligado\n      BOLD_OFF: '\\x1B\\x45\\x00',\n      // Negrito desligado\n      UNDERLINE_ON: '\\x1B\\x2D\\x01',\n      // Sublinhado ligado\n      UNDERLINE_OFF: '\\x1B\\x2D\\x00',\n      // Sublinhado desligado\n\n      // Alinhamento\n      ALIGN_LEFT: '\\x1B\\x61\\x00',\n      // Alinhar à esquerda\n      ALIGN_CENTER: '\\x1B\\x61\\x01',\n      // Centralizar\n      ALIGN_RIGHT: '\\x1B\\x61\\x02',\n      // Alinhar à direita\n\n      // Tamanho da fonte\n      FONT_NORMAL: '\\x1B\\x21\\x00',\n      // Fonte normal\n      FONT_DOUBLE_HEIGHT: '\\x1B\\x21\\x10',\n      // Altura dupla\n      FONT_DOUBLE_WIDTH: '\\x1B\\x21\\x20',\n      // Largura dupla\n      FONT_DOUBLE: '\\x1B\\x21\\x30' // Altura e largura dupla\n    };\n  }\n\n  // Formatar cupom de pedido\n  formatOrderReceipt(pedido) {\n    const cmd = this.getESCPOSCommands();\n    let receipt = '';\n\n    // Inicializar impressora\n    receipt += cmd.INIT;\n\n    // Cabeçalho\n    receipt += cmd.ALIGN_CENTER;\n    receipt += cmd.FONT_DOUBLE;\n    receipt += cmd.BOLD_ON;\n    receipt += 'PIZZARIA ATLAS\\n';\n    receipt += cmd.BOLD_OFF;\n    receipt += cmd.FONT_NORMAL;\n    receipt += 'Rua das Pizzas, 123\\n';\n    receipt += 'Tel: (11) 99999-9999\\n';\n    receipt += cmd.LF;\n\n    // Linha separadora\n    receipt += cmd.ALIGN_LEFT;\n    receipt += '================================\\n';\n\n    // Informações do pedido\n    receipt += cmd.BOLD_ON;\n    receipt += `PEDIDO #${pedido.id || 'N/A'}\\n`;\n    receipt += cmd.BOLD_OFF;\n    receipt += `Data: ${new Date().toLocaleString('pt-BR')}\\n`;\n    receipt += `Cliente: ${pedido.cliente || 'Balcão'}\\n`;\n    if (pedido.telefone) {\n      receipt += `Telefone: ${pedido.telefone}\\n`;\n    }\n    receipt += cmd.LF;\n\n    // Itens do pedido\n    receipt += cmd.BOLD_ON;\n    receipt += 'ITENS:\\n';\n    receipt += cmd.BOLD_OFF;\n    receipt += '--------------------------------\\n';\n    let total = 0;\n    if (pedido.itens && pedido.itens.length > 0) {\n      pedido.itens.forEach(item => {\n        const subtotal = (item.preco || 0) * (item.quantidade || 1);\n        total += subtotal;\n        receipt += `${item.nome || 'Item'}\\n`;\n        receipt += `  ${item.quantidade || 1}x R$ ${(item.preco || 0).toFixed(2)} = R$ ${subtotal.toFixed(2)}\\n`;\n        if (item.observacoes) {\n          receipt += `  Obs: ${item.observacoes}\\n`;\n        }\n        receipt += cmd.LF;\n      });\n    }\n\n    // Total\n    receipt += '--------------------------------\\n';\n    receipt += cmd.FONT_DOUBLE_HEIGHT;\n    receipt += cmd.BOLD_ON;\n    receipt += cmd.ALIGN_RIGHT;\n    receipt += `TOTAL: R$ ${total.toFixed(2)}\\n`;\n    receipt += cmd.BOLD_OFF;\n    receipt += cmd.FONT_NORMAL;\n    receipt += cmd.ALIGN_LEFT;\n\n    // Observações gerais\n    if (pedido.observacoes) {\n      receipt += cmd.LF;\n      receipt += cmd.BOLD_ON;\n      receipt += 'OBSERVAÇÕES:\\n';\n      receipt += cmd.BOLD_OFF;\n      receipt += pedido.observacoes + '\\n';\n    }\n\n    // Rodapé\n    receipt += cmd.LF;\n    receipt += cmd.ALIGN_CENTER;\n    receipt += 'Obrigado pela preferência!\\n';\n    receipt += 'Volte sempre!\\n';\n    receipt += cmd.LF + cmd.LF;\n\n    // Cortar papel\n    receipt += cmd.CUT;\n    return receipt;\n  }\n\n  // Imprimir pedido\n  async printOrder(pedido) {\n    try {\n      if (!this.isConnected) {\n        throw new Error('Impressora não conectada');\n      }\n      const receipt = this.formatOrderReceipt(pedido);\n      await this.print(receipt);\n      console.log('Pedido impresso com sucesso');\n      return true;\n    } catch (error) {\n      console.error('Erro ao imprimir pedido:', error);\n      throw error;\n    }\n  }\n\n  // Teste de impressão\n  async printTest() {\n    try {\n      if (!this.isConnected) {\n        throw new Error('Impressora não conectada');\n      }\n      const cmd = this.getESCPOSCommands();\n      let testPrint = '';\n      testPrint += cmd.INIT;\n      testPrint += cmd.ALIGN_CENTER;\n      testPrint += cmd.FONT_DOUBLE;\n      testPrint += cmd.BOLD_ON;\n      testPrint += 'TESTE DE IMPRESSÃO\\n';\n      testPrint += cmd.BOLD_OFF;\n      testPrint += cmd.FONT_NORMAL;\n      testPrint += cmd.LF;\n      testPrint += 'Impressora funcionando!\\n';\n      testPrint += `Data: ${new Date().toLocaleString('pt-BR')}\\n`;\n      testPrint += cmd.LF + cmd.LF;\n      testPrint += cmd.CUT;\n      await this.print(testPrint);\n      console.log('Teste de impressão realizado');\n      return true;\n    } catch (error) {\n      console.error('Erro no teste de impressão:', error);\n      throw error;\n    }\n  }\n}\n\n// Instância singleton\nconst bluetoothPrinter = new BluetoothPrinterService();\nexport default bluetoothPrinter;","map":{"version":3,"names":["BluetoothPrinterService","constructor","isConnected","connectedDevice","bluetoothSerial","isCordova","window","cordova","PhoneGap","phonegap","document","addEventListener","console","log","isBluetoothAvailable","Promise","resolve","reject","Error","isEnabled","enableBluetooth","enable","error","listPairedDevices","mockDevices","id","name","address","list","devices","connect","deviceId","disconnect","print","data","write","getESCPOSCommands","INIT","LF","CR","CUT","BOLD_ON","BOLD_OFF","UNDERLINE_ON","UNDERLINE_OFF","ALIGN_LEFT","ALIGN_CENTER","ALIGN_RIGHT","FONT_NORMAL","FONT_DOUBLE_HEIGHT","FONT_DOUBLE_WIDTH","FONT_DOUBLE","formatOrderReceipt","pedido","cmd","receipt","Date","toLocaleString","cliente","telefone","total","itens","length","forEach","item","subtotal","preco","quantidade","nome","toFixed","observacoes","printOrder","printTest","testPrint","bluetoothPrinter"],"sources":["E:/appatlas/react-app/src/services/bluetoothPrinter.js"],"sourcesContent":["// Serviço de Impressão Bluetooth para Cordova\nclass BluetoothPrinterService {\n    constructor() {\n        this.isConnected = false;\n        this.connectedDevice = null;\n        this.bluetoothSerial = null;\n        this.isCordova = false;\n        \n        // Verificar se está rodando no Cordova\n        this.isCordova = !!(window.cordova || window.PhoneGap || window.phonegap);\n        \n        if (this.isCordova) {\n            // Inicializar quando o dispositivo estiver pronto\n            document.addEventListener('deviceready', () => {\n                this.bluetoothSerial = window.bluetoothSerial;\n                console.log('Bluetooth Serial inicializado');\n            });\n        } else {\n            console.log('Executando no navegador - funcionalidades Bluetooth simuladas');\n        }\n    }\n\n    // Verificar se Bluetooth está disponível\n    isBluetoothAvailable() {\n        return new Promise((resolve, reject) => {\n            if (!this.isCordova) {\n                // Simular disponibilidade no navegador\n                resolve(true);\n                return;\n            }\n\n            if (!this.bluetoothSerial) {\n                reject(new Error('Plugin Bluetooth não disponível'));\n                return;\n            }\n\n            this.bluetoothSerial.isEnabled(\n                () => resolve(true),\n                () => reject(new Error('Bluetooth não está habilitado'))\n            );\n        });\n    }\n\n    // Habilitar Bluetooth\n    enableBluetooth() {\n        return new Promise((resolve, reject) => {\n            if (!this.isCordova) {\n                // Simular habilitação no navegador\n                resolve(true);\n                return;\n            }\n\n            if (!this.bluetoothSerial) {\n                reject(new Error('Plugin Bluetooth não disponível'));\n                return;\n            }\n\n            this.bluetoothSerial.enable(\n                () => resolve(true),\n                (error) => reject(new Error('Erro ao habilitar Bluetooth: ' + error))\n            );\n        });\n    }\n\n    // Listar dispositivos pareados\n    listPairedDevices() {\n        return new Promise((resolve, reject) => {\n            if (!this.isCordova) {\n                // Simular dispositivos no navegador\n                const mockDevices = [\n                    { id: 'mock-printer-1', name: 'Impressora Térmica 1', address: '00:11:22:33:44:55' },\n                    { id: 'mock-printer-2', name: 'Impressora Térmica 2', address: '00:11:22:33:44:66' }\n                ];\n                resolve(mockDevices);\n                return;\n            }\n\n            if (!this.bluetoothSerial) {\n                reject(new Error('Plugin Bluetooth não disponível'));\n                return;\n            }\n\n            this.bluetoothSerial.list(\n                (devices) => {\n                    console.log('Dispositivos pareados:', devices);\n                    resolve(devices);\n                },\n                (error) => reject(new Error('Erro ao listar dispositivos: ' + error))\n            );\n        });\n    }\n\n    // Conectar a um dispositivo\n    connect(deviceId) {\n        return new Promise((resolve, reject) => {\n            if (!this.isCordova) {\n                // Simular conexão no navegador\n                this.isConnected = true;\n                this.connectedDevice = deviceId;\n                resolve(true);\n                return;\n            }\n\n            if (!this.bluetoothSerial) {\n                reject(new Error('Plugin Bluetooth não disponível'));\n                return;\n            }\n\n            this.bluetoothSerial.connect(\n                deviceId,\n                () => {\n                    this.isConnected = true;\n                    this.connectedDevice = deviceId;\n                    console.log('Conectado ao dispositivo:', deviceId);\n                    resolve(true);\n                },\n                (error) => {\n                    this.isConnected = false;\n                    this.connectedDevice = null;\n                    reject(new Error('Erro ao conectar: ' + error));\n                }\n            );\n        });\n    }\n\n    // Desconectar\n    disconnect() {\n        return new Promise((resolve, reject) => {\n            if (!this.isCordova) {\n                // Simular desconexão no navegador\n                this.isConnected = false;\n                this.connectedDevice = null;\n                resolve(true);\n                return;\n            }\n\n            if (!this.bluetoothSerial) {\n                reject(new Error('Plugin Bluetooth não disponível'));\n                return;\n            }\n\n            this.bluetoothSerial.disconnect(\n                () => {\n                    this.isConnected = false;\n                    this.connectedDevice = null;\n                    console.log('Desconectado');\n                    resolve(true);\n                },\n                (error) => reject(new Error('Erro ao desconectar: ' + error))\n            );\n        });\n    }\n\n    // Enviar dados para impressora\n    print(data) {\n        return new Promise((resolve, reject) => {\n            if (!this.isConnected) {\n                reject(new Error('Não conectado a nenhuma impressora'));\n                return;\n            }\n\n            if (!this.isCordova) {\n                // Simular impressão no navegador\n                console.log('Simulando impressão:', data);\n                resolve(true);\n                return;\n            }\n\n            if (!this.bluetoothSerial) {\n                reject(new Error('Plugin Bluetooth não disponível'));\n                return;\n            }\n\n            this.bluetoothSerial.write(\n                data,\n                () => {\n                    console.log('Dados enviados para impressora');\n                    resolve(true);\n                },\n                (error) => reject(new Error('Erro ao imprimir: ' + error))\n            );\n        });\n    }\n\n    // Comandos ESC/POS para impressoras térmicas\n    getESCPOSCommands() {\n        return {\n            // Comandos básicos\n            INIT: '\\x1B\\x40',           // Inicializar impressora\n            LF: '\\x0A',                 // Line Feed\n            CR: '\\x0D',                 // Carriage Return\n            CUT: '\\x1D\\x56\\x00',        // Cortar papel\n            \n            // Formatação de texto\n            BOLD_ON: '\\x1B\\x45\\x01',    // Negrito ligado\n            BOLD_OFF: '\\x1B\\x45\\x00',   // Negrito desligado\n            UNDERLINE_ON: '\\x1B\\x2D\\x01', // Sublinhado ligado\n            UNDERLINE_OFF: '\\x1B\\x2D\\x00', // Sublinhado desligado\n            \n            // Alinhamento\n            ALIGN_LEFT: '\\x1B\\x61\\x00',   // Alinhar à esquerda\n            ALIGN_CENTER: '\\x1B\\x61\\x01', // Centralizar\n            ALIGN_RIGHT: '\\x1B\\x61\\x02',  // Alinhar à direita\n            \n            // Tamanho da fonte\n            FONT_NORMAL: '\\x1B\\x21\\x00',  // Fonte normal\n            FONT_DOUBLE_HEIGHT: '\\x1B\\x21\\x10', // Altura dupla\n            FONT_DOUBLE_WIDTH: '\\x1B\\x21\\x20',  // Largura dupla\n            FONT_DOUBLE: '\\x1B\\x21\\x30',        // Altura e largura dupla\n        };\n    }\n\n    // Formatar cupom de pedido\n    formatOrderReceipt(pedido) {\n        const cmd = this.getESCPOSCommands();\n        let receipt = '';\n\n        // Inicializar impressora\n        receipt += cmd.INIT;\n        \n        // Cabeçalho\n        receipt += cmd.ALIGN_CENTER;\n        receipt += cmd.FONT_DOUBLE;\n        receipt += cmd.BOLD_ON;\n        receipt += 'PIZZARIA ATLAS\\n';\n        receipt += cmd.BOLD_OFF;\n        receipt += cmd.FONT_NORMAL;\n        receipt += 'Rua das Pizzas, 123\\n';\n        receipt += 'Tel: (11) 99999-9999\\n';\n        receipt += cmd.LF;\n\n        // Linha separadora\n        receipt += cmd.ALIGN_LEFT;\n        receipt += '================================\\n';\n        \n        // Informações do pedido\n        receipt += cmd.BOLD_ON;\n        receipt += `PEDIDO #${pedido.id || 'N/A'}\\n`;\n        receipt += cmd.BOLD_OFF;\n        receipt += `Data: ${new Date().toLocaleString('pt-BR')}\\n`;\n        receipt += `Cliente: ${pedido.cliente || 'Balcão'}\\n`;\n        if (pedido.telefone) {\n            receipt += `Telefone: ${pedido.telefone}\\n`;\n        }\n        receipt += cmd.LF;\n\n        // Itens do pedido\n        receipt += cmd.BOLD_ON;\n        receipt += 'ITENS:\\n';\n        receipt += cmd.BOLD_OFF;\n        receipt += '--------------------------------\\n';\n\n        let total = 0;\n        if (pedido.itens && pedido.itens.length > 0) {\n            pedido.itens.forEach(item => {\n                const subtotal = (item.preco || 0) * (item.quantidade || 1);\n                total += subtotal;\n                \n                receipt += `${item.nome || 'Item'}\\n`;\n                receipt += `  ${item.quantidade || 1}x R$ ${(item.preco || 0).toFixed(2)} = R$ ${subtotal.toFixed(2)}\\n`;\n                \n                if (item.observacoes) {\n                    receipt += `  Obs: ${item.observacoes}\\n`;\n                }\n                receipt += cmd.LF;\n            });\n        }\n\n        // Total\n        receipt += '--------------------------------\\n';\n        receipt += cmd.FONT_DOUBLE_HEIGHT;\n        receipt += cmd.BOLD_ON;\n        receipt += cmd.ALIGN_RIGHT;\n        receipt += `TOTAL: R$ ${total.toFixed(2)}\\n`;\n        receipt += cmd.BOLD_OFF;\n        receipt += cmd.FONT_NORMAL;\n        receipt += cmd.ALIGN_LEFT;\n\n        // Observações gerais\n        if (pedido.observacoes) {\n            receipt += cmd.LF;\n            receipt += cmd.BOLD_ON;\n            receipt += 'OBSERVAÇÕES:\\n';\n            receipt += cmd.BOLD_OFF;\n            receipt += pedido.observacoes + '\\n';\n        }\n\n        // Rodapé\n        receipt += cmd.LF;\n        receipt += cmd.ALIGN_CENTER;\n        receipt += 'Obrigado pela preferência!\\n';\n        receipt += 'Volte sempre!\\n';\n        receipt += cmd.LF + cmd.LF;\n\n        // Cortar papel\n        receipt += cmd.CUT;\n\n        return receipt;\n    }\n\n    // Imprimir pedido\n    async printOrder(pedido) {\n        try {\n            if (!this.isConnected) {\n                throw new Error('Impressora não conectada');\n            }\n\n            const receipt = this.formatOrderReceipt(pedido);\n            await this.print(receipt);\n            \n            console.log('Pedido impresso com sucesso');\n            return true;\n        } catch (error) {\n            console.error('Erro ao imprimir pedido:', error);\n            throw error;\n        }\n    }\n\n    // Teste de impressão\n    async printTest() {\n        try {\n            if (!this.isConnected) {\n                throw new Error('Impressora não conectada');\n            }\n\n            const cmd = this.getESCPOSCommands();\n            let testPrint = '';\n            \n            testPrint += cmd.INIT;\n            testPrint += cmd.ALIGN_CENTER;\n            testPrint += cmd.FONT_DOUBLE;\n            testPrint += cmd.BOLD_ON;\n            testPrint += 'TESTE DE IMPRESSÃO\\n';\n            testPrint += cmd.BOLD_OFF;\n            testPrint += cmd.FONT_NORMAL;\n            testPrint += cmd.LF;\n            testPrint += 'Impressora funcionando!\\n';\n            testPrint += `Data: ${new Date().toLocaleString('pt-BR')}\\n`;\n            testPrint += cmd.LF + cmd.LF;\n            testPrint += cmd.CUT;\n\n            await this.print(testPrint);\n            console.log('Teste de impressão realizado');\n            return true;\n        } catch (error) {\n            console.error('Erro no teste de impressão:', error);\n            throw error;\n        }\n    }\n}\n\n// Instância singleton\nconst bluetoothPrinter = new BluetoothPrinterService();\n\nexport default bluetoothPrinter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}