{"ast":null,"code":"import axios from 'axios';\n\n// Configuração da API - função que retorna a URL baseada no ambiente atual\nfunction getApiUrl() {\n  // Se estiver rodando no Cordova (protocolo file:), usar a API do InfinityFree\n  if (typeof window !== 'undefined' && window.location.protocol === 'file:') {\n    return 'https://rotaexpress.free.nf'; // URL do seu domínio\n  }\n\n  // Detectar o ambiente baseado no hostname\n  if (typeof window !== 'undefined') {\n    const hostname = window.location.hostname;\n\n    // Para desenvolvimento local, usar servidor local\n    const isLocal = hostname === 'localhost' || hostname === '127.0.0.1';\n    if (isLocal) {\n      return 'http://localhost:3001';\n    }\n\n    // Se estiver no InfinityFree, usar a API local\n    if (hostname.includes('infinityfreeapp.com') || hostname.includes('epizy.com') || hostname === 'rotaexpress.free.nf') {\n      return window.location.origin;\n    }\n  }\n\n  // Fallback para InfinityFree\n  return 'https://rotaexpress.free.nf'; // URL do seu domínio\n}\n\n// Configuração do axios\nconst API_URL = getApiUrl();\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 15000,\n  // Aumentado para InfinityFree\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Debug: Log da configuração da API\nconsole.log('API_URL configurado:', API_URL);\nif (typeof window !== 'undefined') {\n  console.log('Protocolo atual:', window.location.protocol);\n  console.log('Hostname atual:', window.location.hostname);\n  console.log('Ambiente detectado:', window.location.protocol === 'file:' ? 'Cordova' : window.location.hostname.includes('infinityfreeapp.com') || window.location.hostname.includes('epizy.com') || window.location.hostname === 'rotaexpress.free.nf' ? 'InfinityFree' : window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' ? 'Local' : 'Outro');\n}\nconsole.log('Build timestamp:', new Date().toISOString());\n\n// Função para testar a conexão com a API\nexport const testarConexao = async () => {\n  try {\n    const response = await api.get('/api/test');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao testar conexão:', error);\n    throw error;\n  }\n};\n\n// Funções para gerenciamento de produtos\nexport const getProdutos = async () => {\n  try {\n    const response = await api.get('/api/produtos');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar produtos:', error);\n    throw error;\n  }\n};\nexport const criarProduto = async dados => {\n  try {\n    const response = await api.post('/api/produtos', dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao criar produto:', error);\n    throw error;\n  }\n};\nexport const atualizarProduto = async (id, dados) => {\n  try {\n    const response = await api.put(`/api/produtos/${id}`, dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao atualizar produto:', error);\n    throw error;\n  }\n};\nexport const deletarProduto = async id => {\n  try {\n    const response = await api.delete(`/api/produtos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar produto:', error);\n    throw error;\n  }\n};\n\n// Funções para gerenciamento de pedidos\nexport const getPedidos = async () => {\n  try {\n    const response = await api.get('/api/pedidos');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar pedidos:', error);\n    throw error;\n  }\n};\nexport const getPedidoById = async id => {\n  try {\n    const response = await api.get(`/api/pedidos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar pedido:', error);\n    throw error;\n  }\n};\nexport const criarPedido = async pedido => {\n  try {\n    const response = await api.post('/api/pedidos', pedido);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao criar pedido:', error);\n    throw error;\n  }\n};\nexport const atualizarPedido = async (id, dados) => {\n  try {\n    const response = await api.put(`/api/pedidos/${id}`, dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao atualizar pedido:', error);\n    throw error;\n  }\n};\nexport const deletarPedido = async id => {\n  try {\n    const response = await api.delete(`/api/pedidos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar pedido:', error);\n    throw error;\n  }\n};\nexport const deletarTodosPedidos = async () => {\n  try {\n    const response = await api.delete('/api/pedidos?deleteAll=true');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar todos os pedidos:', error);\n    throw error;\n  }\n};\nexport const getCardapio = async (tipo = '') => {\n  try {\n    const url = tipo ? `/api/cardapio?tipo=${tipo}` : '/api/cardapio';\n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar cardápio:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","getApiUrl","window","location","protocol","hostname","isLocal","includes","origin","API_URL","api","create","baseURL","timeout","headers","console","log","Date","toISOString","testarConexao","response","get","data","error","getProdutos","criarProduto","dados","post","atualizarProduto","id","put","deletarProduto","delete","getPedidos","getPedidoById","criarPedido","pedido","atualizarPedido","deletarPedido","deletarTodosPedidos","getCardapio","tipo","url"],"sources":["E:/appatlas/react-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Configuração da API - função que retorna a URL baseada no ambiente atual\nfunction getApiUrl() {\n    // Se estiver rodando no Cordova (protocolo file:), usar a API do InfinityFree\n    if (typeof window !== 'undefined' && window.location.protocol === 'file:') {\n        return 'https://rotaexpress.free.nf'; // URL do seu domínio\n    }\n    \n    // Detectar o ambiente baseado no hostname\n    if (typeof window !== 'undefined') {\n        const hostname = window.location.hostname;\n        \n        // Para desenvolvimento local, usar servidor local\n        const isLocal = hostname === 'localhost' || hostname === '127.0.0.1';\n        if (isLocal) {\n            return 'http://localhost:3001';\n        }\n        \n        // Se estiver no InfinityFree, usar a API local\n        if (hostname.includes('infinityfreeapp.com') || hostname.includes('epizy.com') || hostname === 'rotaexpress.free.nf') {\n            return window.location.origin;\n        }\n    }\n    \n    // Fallback para InfinityFree\n    return 'https://rotaexpress.free.nf'; // URL do seu domínio\n}\n\n// Configuração do axios\nconst API_URL = getApiUrl();\nconst api = axios.create({\n    baseURL: API_URL,\n    timeout: 15000, // Aumentado para InfinityFree\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// Debug: Log da configuração da API\nconsole.log('API_URL configurado:', API_URL);\nif (typeof window !== 'undefined') {\n    console.log('Protocolo atual:', window.location.protocol);\n    console.log('Hostname atual:', window.location.hostname);\n    console.log('Ambiente detectado:', \n        window.location.protocol === 'file:' ? 'Cordova' : \n        window.location.hostname.includes('infinityfreeapp.com') || window.location.hostname.includes('epizy.com') || window.location.hostname === 'rotaexpress.free.nf' ? 'InfinityFree' : \n        window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' ? 'Local' : 'Outro'\n    );\n}\nconsole.log('Build timestamp:', new Date().toISOString());\n\n// Função para testar a conexão com a API\nexport const testarConexao = async () => {\n    try {\n        const response = await api.get('/api/test');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao testar conexão:', error);\n        throw error;\n    }\n};\n\n// Funções para gerenciamento de produtos\nexport const getProdutos = async () => {\n    try {\n        const response = await api.get('/api/produtos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar produtos:', error);\n        throw error;\n    }\n};\n\nexport const criarProduto = async (dados) => {\n    try {\n        const response = await api.post('/api/produtos', dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar produto:', error);\n        throw error;\n    }\n};\n\nexport const atualizarProduto = async (id, dados) => {\n    try {\n        const response = await api.put(`/api/produtos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar produto:', error);\n        throw error;\n    }\n};\n\nexport const deletarProduto = async (id) => {\n    try {\n        const response = await api.delete(`/api/produtos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar produto:', error);\n        throw error;\n    }\n};\n\n// Funções para gerenciamento de pedidos\nexport const getPedidos = async () => {\n    try {\n        const response = await api.get('/api/pedidos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getPedidoById = async (id) => {\n    try {\n        const response = await api.get(`/api/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedido:', error);\n        throw error;\n    }\n};\n\nexport const criarPedido = async (pedido) => {\n    try {\n        const response = await api.post('/api/pedidos', pedido);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar pedido:', error);\n        throw error;\n    }\n};\n\nexport const atualizarPedido = async (id, dados) => {\n    try {\n        const response = await api.put(`/api/pedidos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarPedido = async (id) => {\n    try {\n        const response = await api.delete(`/api/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarTodosPedidos = async () => {\n    try {\n        const response = await api.delete('/api/pedidos?deleteAll=true');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar todos os pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getCardapio = async (tipo = '') => {\n    try {\n        const url = tipo ? `/api/cardapio?tipo=${tipo}` : '/api/cardapio';\n        const response = await api.get(url);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar cardápio:', error);\n        throw error;\n    }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}