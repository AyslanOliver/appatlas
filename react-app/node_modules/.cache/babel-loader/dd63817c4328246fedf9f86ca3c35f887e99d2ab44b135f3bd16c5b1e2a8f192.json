{"ast":null,"code":"import axios from'axios';// Configuração da API\nfunction getApiUrl(){// Se estiver rodando no Cordova (protocolo file:), usar o servidor local\nif(window.location.protocol==='file:'){return'http://localhost:3001';}const hostname=window.location.hostname;const isLocal=hostname==='localhost'||hostname==='127.0.0.1';if(isLocal){// Em desenvolvimento local, usar o servidor local\nreturn'http://localhost:3001';}else if(hostname==='rotaexpress.free.nf'){// Em produção no InfinityFree, usar a API local\nreturn'https://rotaexpress.free.nf/api';}else{// Outros ambientes de produção (Vercel, etc.)\nreturn'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app/api';}}const API_URL=getApiUrl();// Configuração do axios\nconst api=axios.create({baseURL:API_URL,timeout:10000,headers:{'Content-Type':'application/json'}});// Debug: Log da configuração da API\nconsole.log('API_URL configurado:',API_URL);console.log('Protocolo atual:',window.location.protocol);console.log('Hostname atual:',window.location.hostname);console.log('Ambiente detectado:',window.location.protocol==='file:'?'Cordova':'Web');// Função para testar a conexão com a API\nexport const testarConexao=async()=>{try{await api.get('/produtos');console.log('Conexão com a API estabelecida com sucesso!');return true;}catch(error){console.error('Erro de conexão:',error);throw new Error('Erro ao conectar com o servidor. Verifique se a API está rodando.');}};// Funções para gerenciamento de produtos\nexport const getProdutos=async()=>{try{const response=await api.get('/produtos');return response.data;}catch(error){console.error('Erro ao buscar produtos:',error);throw error;}};export const criarProduto=async dados=>{try{const response=await api.post('/produtos',dados);return response.data;}catch(error){console.error('Erro ao criar produto:',error);throw error;}};export const atualizarProduto=async(id,dados)=>{try{const response=await api.put(\"/produtos/\".concat(id),dados);return response.data;}catch(error){console.error('Erro ao atualizar produto:',error);throw error;}};export const deletarProduto=async id=>{try{const response=await api.delete(\"/produtos/\".concat(id));return response.data;}catch(error){console.error('Erro ao deletar produto:',error);throw error;}};// Funções para gerenciamento de pedidos\nexport const getPedidos=async()=>{try{const response=await api.get('/pedidos');return response.data;}catch(error){console.error('Erro ao buscar pedidos:',error);throw error;}};export const getPedidoById=async id=>{try{const response=await api.get(\"/pedidos/\".concat(id));return response.data;}catch(error){console.error('Erro ao buscar pedido:',error);throw error;}};export const criarPedido=async pedido=>{try{const response=await api.post('/pedidos',pedido);return response.data;}catch(error){console.error('Erro ao criar pedido:',error);throw error;}};export const atualizarPedido=async(id,dados)=>{try{const response=await api.put(\"/pedidos/\".concat(id),dados);return response.data;}catch(error){console.error('Erro ao atualizar pedido:',error);throw error;}};export const deletarPedido=async id=>{try{const response=await api.delete(\"/pedidos/\".concat(id));return response.data;}catch(error){console.error('Erro ao deletar pedido:',error);throw error;}};export const deletarTodosPedidos=async()=>{try{const response=await api.delete('/pedidos?deleteAll=true');return response.data;}catch(error){console.error('Erro ao deletar todos os pedidos:',error);throw error;}};export const getCardapio=async function(){let tipo=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{const url=tipo?\"/cardapio?tipo=\".concat(tipo):'/cardapio';const response=await api.get(url);return response.data;}catch(error){console.error('Erro ao buscar cardápio:',error);throw error;}};export default api;","map":{"version":3,"names":["axios","getApiUrl","window","location","protocol","hostname","isLocal","API_URL","api","create","baseURL","timeout","headers","console","log","testarConexao","get","error","Error","getProdutos","response","data","criarProduto","dados","post","atualizarProduto","id","put","concat","deletarProduto","delete","getPedidos","getPedidoById","criarPedido","pedido","atualizarPedido","deletarPedido","deletarTodosPedidos","getCardapio","tipo","arguments","length","undefined","url"],"sources":["E:/appatlas/react-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Configuração da API\nfunction getApiUrl() {\n    // Se estiver rodando no Cordova (protocolo file:), usar o servidor local\n    if (window.location.protocol === 'file:') {\n        return 'http://localhost:3001';\n    }\n    \n    const hostname = window.location.hostname;\n    const isLocal = hostname === 'localhost' || hostname === '127.0.0.1';\n    \n    if (isLocal) {\n        // Em desenvolvimento local, usar o servidor local\n        return 'http://localhost:3001';\n    } else if (hostname === 'rotaexpress.free.nf') {\n        // Em produção no InfinityFree, usar a API local\n        return 'https://rotaexpress.free.nf/api';\n    } else {\n        // Outros ambientes de produção (Vercel, etc.)\n        return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app/api';\n    }\n}\n\nconst API_URL = getApiUrl();\n\n// Configuração do axios\nconst api = axios.create({\n    baseURL: API_URL,\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// Debug: Log da configuração da API\nconsole.log('API_URL configurado:', API_URL);\nconsole.log('Protocolo atual:', window.location.protocol);\nconsole.log('Hostname atual:', window.location.hostname);\nconsole.log('Ambiente detectado:', window.location.protocol === 'file:' ? 'Cordova' : 'Web');\n\n// Função para testar a conexão com a API\nexport const testarConexao = async () => {\n    try {\n        await api.get('/produtos');\n        console.log('Conexão com a API estabelecida com sucesso!');\n        return true;\n    } catch (error) {\n        console.error('Erro de conexão:', error);\n        throw new Error('Erro ao conectar com o servidor. Verifique se a API está rodando.');\n    }\n};\n\n// Funções para gerenciamento de produtos\nexport const getProdutos = async () => {\n    try {\n        const response = await api.get('/produtos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar produtos:', error);\n        throw error;\n    }\n};\n\nexport const criarProduto = async (dados) => {\n    try {\n        const response = await api.post('/produtos', dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar produto:', error);\n        throw error;\n    }\n};\n\nexport const atualizarProduto = async (id, dados) => {\n    try {\n        const response = await api.put(`/produtos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar produto:', error);\n        throw error;\n    }\n};\n\nexport const deletarProduto = async (id) => {\n    try {\n        const response = await api.delete(`/produtos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar produto:', error);\n        throw error;\n    }\n};\n\n// Funções para gerenciamento de pedidos\nexport const getPedidos = async () => {\n    try {\n        const response = await api.get('/pedidos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getPedidoById = async (id) => {\n    try {\n        const response = await api.get(`/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedido:', error);\n        throw error;\n    }\n};\n\nexport const criarPedido = async (pedido) => {\n    try {\n        const response = await api.post('/pedidos', pedido);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar pedido:', error);\n        throw error;\n    }\n};\n\nexport const atualizarPedido = async (id, dados) => {\n    try {\n        const response = await api.put(`/pedidos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarPedido = async (id) => {\n    try {\n        const response = await api.delete(`/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarTodosPedidos = async () => {\n    try {\n        const response = await api.delete('/pedidos?deleteAll=true');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar todos os pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getCardapio = async (tipo = '') => {\n    try {\n        const url = tipo ? `/cardapio?tipo=${tipo}` : '/cardapio';\n        const response = await api.get(url);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar cardápio:', error);\n        throw error;\n    }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}