{"ast":null,"code":"import axios from 'axios';\n\n// Configuração da API - função que retorna a URL baseada no ambiente atual\nfunction getApiUrl() {\n  // Se estiver rodando no Cordova (protocolo file:), usar o servidor local\n  if (typeof window !== 'undefined' && window.location.protocol === 'file:') {\n    return 'http://localhost:3001';\n  }\n\n  // Detectar o ambiente baseado no hostname - v2.1\n  if (typeof window !== 'undefined') {\n    const hostname = window.location.hostname;\n    const isLocal = hostname === 'localhost' || hostname === '127.0.0.1';\n    if (isLocal) {\n      // Em desenvolvimento local, usar o servidor local\n      return 'http://localhost:3001';\n    } else if (hostname === 'rotaexpress.free.nf') {\n      // Em produção no InfinityFree, usar a API local\n      return 'https://rotaexpress.free.nf/api';\n    }\n  }\n\n  // Outros ambientes de produção (Vercel, etc.) ou fallback\n  return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app/api';\n}\n\n// Configuração do axios\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Debug: Log da configuração da API\nconsole.log('API_URL configurado:', API_URL);\nconsole.log('Protocolo atual:', window.location.protocol);\nconsole.log('Hostname atual:', window.location.hostname);\nconsole.log('Ambiente detectado:', window.location.protocol === 'file:' ? 'Cordova' : 'Web');\nconsole.log('Build timestamp:', new Date().toISOString());\n\n// Função para testar a conexão com a API\nexport const testarConexao = async () => {\n  try {\n    await api.get('/produtos');\n    console.log('Conexão com a API estabelecida com sucesso!');\n    return true;\n  } catch (error) {\n    console.error('Erro de conexão:', error);\n    throw new Error('Erro ao conectar com o servidor. Verifique se a API está rodando.');\n  }\n};\n\n// Funções para gerenciamento de produtos\nexport const getProdutos = async () => {\n  try {\n    const response = await api.get('/produtos');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar produtos:', error);\n    throw error;\n  }\n};\nexport const criarProduto = async dados => {\n  try {\n    const response = await api.post('/produtos', dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao criar produto:', error);\n    throw error;\n  }\n};\nexport const atualizarProduto = async (id, dados) => {\n  try {\n    const response = await api.put(`/produtos/${id}`, dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao atualizar produto:', error);\n    throw error;\n  }\n};\nexport const deletarProduto = async id => {\n  try {\n    const response = await api.delete(`/produtos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar produto:', error);\n    throw error;\n  }\n};\n\n// Funções para gerenciamento de pedidos\nexport const getPedidos = async () => {\n  try {\n    const response = await api.get('/pedidos');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar pedidos:', error);\n    throw error;\n  }\n};\nexport const getPedidoById = async id => {\n  try {\n    const response = await api.get(`/pedidos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar pedido:', error);\n    throw error;\n  }\n};\nexport const criarPedido = async pedido => {\n  try {\n    const response = await api.post('/pedidos', pedido);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao criar pedido:', error);\n    throw error;\n  }\n};\nexport const atualizarPedido = async (id, dados) => {\n  try {\n    const response = await api.put(`/pedidos/${id}`, dados);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao atualizar pedido:', error);\n    throw error;\n  }\n};\nexport const deletarPedido = async id => {\n  try {\n    const response = await api.delete(`/pedidos/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar pedido:', error);\n    throw error;\n  }\n};\nexport const deletarTodosPedidos = async () => {\n  try {\n    const response = await api.delete('/pedidos?deleteAll=true');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao deletar todos os pedidos:', error);\n    throw error;\n  }\n};\nexport const getCardapio = async (tipo = '') => {\n  try {\n    const url = tipo ? `/cardapio?tipo=${tipo}` : '/cardapio';\n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar cardápio:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","getApiUrl","window","location","protocol","hostname","isLocal","api","create","baseURL","API_URL","timeout","headers","console","log","Date","toISOString","testarConexao","get","error","Error","getProdutos","response","data","criarProduto","dados","post","atualizarProduto","id","put","deletarProduto","delete","getPedidos","getPedidoById","criarPedido","pedido","atualizarPedido","deletarPedido","deletarTodosPedidos","getCardapio","tipo","url"],"sources":["E:/appatlas/react-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Configuração da API - função que retorna a URL baseada no ambiente atual\nfunction getApiUrl() {\n    // Se estiver rodando no Cordova (protocolo file:), usar o servidor local\n    if (typeof window !== 'undefined' && window.location.protocol === 'file:') {\n        return 'http://localhost:3001';\n    }\n    \n    // Detectar o ambiente baseado no hostname - v2.1\n    if (typeof window !== 'undefined') {\n        const hostname = window.location.hostname;\n        const isLocal = hostname === 'localhost' || hostname === '127.0.0.1';\n        \n        if (isLocal) {\n            // Em desenvolvimento local, usar o servidor local\n            return 'http://localhost:3001';\n        } else if (hostname === 'rotaexpress.free.nf') {\n            // Em produção no InfinityFree, usar a API local\n            return 'https://rotaexpress.free.nf/api';\n        }\n    }\n    \n    // Outros ambientes de produção (Vercel, etc.) ou fallback\n    return 'https://appatlas-afusc3hg5-ayslanoons-projects.vercel.app/api';\n}\n\n// Configuração do axios\nconst api = axios.create({\n    baseURL: API_URL,\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// Debug: Log da configuração da API\nconsole.log('API_URL configurado:', API_URL);\nconsole.log('Protocolo atual:', window.location.protocol);\nconsole.log('Hostname atual:', window.location.hostname);\nconsole.log('Ambiente detectado:', window.location.protocol === 'file:' ? 'Cordova' : 'Web');\nconsole.log('Build timestamp:', new Date().toISOString());\n\n// Função para testar a conexão com a API\nexport const testarConexao = async () => {\n    try {\n        await api.get('/produtos');\n        console.log('Conexão com a API estabelecida com sucesso!');\n        return true;\n    } catch (error) {\n        console.error('Erro de conexão:', error);\n        throw new Error('Erro ao conectar com o servidor. Verifique se a API está rodando.');\n    }\n};\n\n// Funções para gerenciamento de produtos\nexport const getProdutos = async () => {\n    try {\n        const response = await api.get('/produtos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar produtos:', error);\n        throw error;\n    }\n};\n\nexport const criarProduto = async (dados) => {\n    try {\n        const response = await api.post('/produtos', dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar produto:', error);\n        throw error;\n    }\n};\n\nexport const atualizarProduto = async (id, dados) => {\n    try {\n        const response = await api.put(`/produtos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar produto:', error);\n        throw error;\n    }\n};\n\nexport const deletarProduto = async (id) => {\n    try {\n        const response = await api.delete(`/produtos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar produto:', error);\n        throw error;\n    }\n};\n\n// Funções para gerenciamento de pedidos\nexport const getPedidos = async () => {\n    try {\n        const response = await api.get('/pedidos');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getPedidoById = async (id) => {\n    try {\n        const response = await api.get(`/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar pedido:', error);\n        throw error;\n    }\n};\n\nexport const criarPedido = async (pedido) => {\n    try {\n        const response = await api.post('/pedidos', pedido);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao criar pedido:', error);\n        throw error;\n    }\n};\n\nexport const atualizarPedido = async (id, dados) => {\n    try {\n        const response = await api.put(`/pedidos/${id}`, dados);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao atualizar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarPedido = async (id) => {\n    try {\n        const response = await api.delete(`/pedidos/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar pedido:', error);\n        throw error;\n    }\n};\n\nexport const deletarTodosPedidos = async () => {\n    try {\n        const response = await api.delete('/pedidos?deleteAll=true');\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao deletar todos os pedidos:', error);\n        throw error;\n    }\n};\n\nexport const getCardapio = async (tipo = '') => {\n    try {\n        const url = tipo ? `/cardapio?tipo=${tipo}` : '/cardapio';\n        const response = await api.get(url);\n        return response.data;\n    } catch (error) {\n        console.error('Erro ao buscar cardápio:', error);\n        throw error;\n    }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}